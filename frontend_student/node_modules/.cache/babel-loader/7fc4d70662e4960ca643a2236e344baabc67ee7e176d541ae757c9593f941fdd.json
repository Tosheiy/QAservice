{"ast":null,"code":"var _jsxFileName = \"/Users/toshi/Document/AI/engineeringAI/QAservice/frontend_student/src/routes/QASolve.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./QASolve.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QASolve = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [qa, setQa] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [textAnswer, setTextAnswer] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  useEffect(() => {\n    axios.get(`http://localhost:8000/qadetail/${id}`).then(response => {\n      setQa(response.data);\n    }).catch(error => {\n      console.error(\"データ取得に失敗しました\", error);\n    });\n  }, [id]);\n  const handleCheckboxChange = option => {\n    setSelectedOptions(prev => prev.includes(option) ? prev.filter(opt => opt !== option) : [...prev, option]);\n  };\n  const handleSubmit = () => {\n    let userAnswer;\n    if ((qa === null || qa === void 0 ? void 0 : qa.mode) === \"記述問題\") {\n      userAnswer = textAnswer;\n    } else if ((qa === null || qa === void 0 ? void 0 : qa.mode) === \"４択複数問題\") {\n      userAnswer = selectedOptions;\n    } else {\n      userAnswer = selectedOption;\n    }\n    const payload = {\n      qa_id: id,\n      user_answer: userAnswer\n    };\n    axios.post(\"http://localhost:8000/submit\", payload).then(() => {\n      alert(\"回答が送信されました\");\n      setSubmitted(true);\n    }).catch(error => {\n      console.error(\"回答送信に失敗しました\", error);\n    });\n  };\n  if (!qa) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 21\n  }, this);\n  if (submitted) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u56DE\\u7B54\\u3042\\u308A\\u304C\\u3068\\u3046\\u3054\\u3056\\u3044\\u307E\\u3057\\u305F\\u3002\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"solve-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"solve-title\",\n      children: \"\\u554F\\u984C\\u3092\\u89E3\\u304F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"solve-question\",\n      children: qa.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), (qa.mode === \"４択問題\" || qa.mode === \"３択問題\") && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"solve-options\",\n      children: qa.options.map((opt, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"solve-option\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"option\",\n          value: opt,\n          checked: selectedOption === opt,\n          onChange: e => setSelectedOption(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this), opt]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), qa.mode === \"４択複数問題\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"solve-options\",\n      children: qa.options.map((opt, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"solve-option\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: opt,\n          checked: selectedOptions.includes(opt),\n          onChange: () => handleCheckboxChange(opt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this), opt]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this), qa.mode === \"記述問題\" && /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"solve-textarea\",\n      value: textAnswer,\n      onChange: e => setTextAnswer(e.target.value),\n      placeholder: \"\\u3053\\u3053\\u306B\\u56DE\\u7B54\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"solve-submit-button\",\n      onClick: handleSubmit,\n      disabled: submitted,\n      children: \"\\u56DE\\u7B54\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(QASolve, \"G5Cr5oenG+ryA7NpkcKhaKKmHc0=\", false, function () {\n  return [useParams];\n});\n_c = QASolve;\nexport default QASolve;\nvar _c;\n$RefreshReg$(_c, \"QASolve\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","QASolve","_s","id","qa","setQa","selectedOption","setSelectedOption","selectedOptions","setSelectedOptions","textAnswer","setTextAnswer","submitted","setSubmitted","get","then","response","data","catch","error","console","handleCheckboxChange","option","prev","includes","filter","opt","handleSubmit","userAnswer","mode","payload","qa_id","user_answer","post","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","question","options","map","index","type","name","value","checked","onChange","e","target","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/toshi/Document/AI/engineeringAI/QAservice/frontend_student/src/routes/QASolve.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./QASolve.css\";\n\ninterface QAItem {\n    id: number;\n    question: string;\n    options: string[];\n    answer: string;\n    mode: \"４択問題\" | \"３択問題\" | \"記述問題\" | \"４択複数問題\";\n}\n\nconst QASolve: React.FC = () => {\n    const { id } = useParams();\n    const [qa, setQa] = useState<QAItem | null>(null);\n    const [selectedOption, setSelectedOption] = useState<string>(\"\");\n    const [selectedOptions, setSelectedOptions] = useState<string[]>([]);\n    const [textAnswer, setTextAnswer] = useState<string>(\"\");\n    const [submitted, setSubmitted] = useState(false);\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/qadetail/${id}`)\n            .then(response => {\n                setQa(response.data);\n            })\n            .catch(error => {\n                console.error(\"データ取得に失敗しました\", error);\n            });\n    }, [id]);\n\n    const handleCheckboxChange = (option: string) => {\n        setSelectedOptions(prev =>\n            prev.includes(option)\n                ? prev.filter(opt => opt !== option)\n                : [...prev, option]\n        );\n    };\n\n    const handleSubmit = () => {\n        let userAnswer;\n\n        if (qa?.mode === \"記述問題\") {\n            userAnswer = textAnswer;\n        } else if (qa?.mode === \"４択複数問題\") {\n            userAnswer = selectedOptions;\n        } else {\n            userAnswer = selectedOption;\n        }\n\n        const payload = {\n            qa_id: id,\n            user_answer: userAnswer\n        };\n\n        axios.post(\"http://localhost:8000/submit\", payload)\n            .then(() => {\n                alert(\"回答が送信されました\");\n                setSubmitted(true);\n            })\n            .catch(error => {\n                console.error(\"回答送信に失敗しました\", error);\n            });\n    };\n\n    if (!qa) return <div>読み込み中...</div>;\n    if (submitted) return <div>回答ありがとうございました。</div>;\n\n    return (\n        <div className=\"solve-container\">\n            <h2 className=\"solve-title\">問題を解く</h2>\n            <p className=\"solve-question\">{qa.question}</p>\n\n            {(qa.mode === \"４択問題\" || qa.mode === \"３択問題\") && (\n                <div className=\"solve-options\">\n                    {qa.options.map((opt, index) => (\n                        <label key={index} className=\"solve-option\">\n                            <input\n                                type=\"radio\"\n                                name=\"option\"\n                                value={opt}\n                                checked={selectedOption === opt}\n                                onChange={(e) => setSelectedOption(e.target.value)}\n                            />\n                            {opt}\n                        </label>\n                    ))}\n                </div>\n            )}\n\n            {qa.mode === \"４択複数問題\" && (\n                <div className=\"solve-options\">\n                    {qa.options.map((opt, index) => (\n                        <label key={index} className=\"solve-option\">\n                            <input\n                                type=\"checkbox\"\n                                value={opt}\n                                checked={selectedOptions.includes(opt)}\n                                onChange={() => handleCheckboxChange(opt)}\n                            />\n                            {opt}\n                        </label>\n                    ))}\n                </div>\n            )}\n\n            {qa.mode === \"記述問題\" && (\n                <textarea\n                    className=\"solve-textarea\"\n                    value={textAnswer}\n                    onChange={(e) => setTextAnswer(e.target.value)}\n                    placeholder=\"ここに回答を入力してください\"\n                />\n            )}\n\n            <button className=\"solve-submit-button\" onClick={handleSubmit} disabled={submitted}>\n                回答する\n            </button>\n        </div>\n    );\n};\n\nexport default QASolve;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}