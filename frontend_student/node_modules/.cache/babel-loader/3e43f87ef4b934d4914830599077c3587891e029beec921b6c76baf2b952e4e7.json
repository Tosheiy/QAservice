{"ast":null,"code":"var _jsxFileName = \"/Users/toshi/Document/AI/engineeringAI/QAservice/frontend_student/src/routes/QASolve.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./QASolve.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QASolve = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [questions, setQuestions] = useState([]);\n  const [mode, setMode] = useState(\"\");\n  const [answers, setAnswers] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const [title, setTitle] = useState(\"\"); // ← 追加\n\n  useEffect(() => {\n    // モード取得\n    axios.get(`http://localhost:8000/qainfo/${id}`).then(res => {\n      setMode(res.data.mode);\n      setTitle(res.data.title); // ← 追加\n    });\n\n    // 問題取得\n    axios.get(`http://localhost:8000/qaitem/${id}`).then(res => {\n      setQuestions(res.data);\n    }).catch(err => {\n      console.error(\"問題の取得に失敗\", err);\n    });\n  }, [id]);\n  const handleChange = (qa_id, value) => {\n    setAnswers(prev => ({\n      ...prev,\n      [qa_id]: value\n    }));\n  };\n  const handleMultiSelectChange = (qa_id, value) => {\n    setAnswers(prev => {\n      const current = prev[qa_id] || [];\n      if (current.includes(value)) {\n        return {\n          ...prev,\n          [qa_id]: current.filter(v => v !== value)\n        };\n      } else {\n        return {\n          ...prev,\n          [qa_id]: [...current, value]\n        };\n      }\n    });\n  };\n  const handleSubmit = () => {\n    const payload = {\n      qa_info_id: id,\n      answers: answers\n    };\n    axios.post(\"http://localhost:8000/submit\", payload).then(() => {\n      alert(\"全ての回答が送信されました\");\n      setSubmitted(true);\n    }).catch(err => {\n      console.error(\"送信に失敗しました\", err);\n    });\n  };\n  if (submitted) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u56DE\\u7B54\\u3042\\u308A\\u304C\\u3068\\u3046\\u3054\\u3056\\u3044\\u307E\\u3057\\u305F\\u3002\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"solve-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"solve-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"solve-question-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"solve-question\",\n        children: [index + 1, \". \", q.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), (mode === \"４択問題\" || mode === \"３択問題\") && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"solve-options\",\n        children: q.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"solve-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: `option-${q.qa_id}`,\n            value: opt,\n            checked: answers[q.qa_id] === opt,\n            onChange: () => handleChange(q.qa_id, opt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 37\n          }, this), opt]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this), mode === \"４択複数問題\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"solve-options\",\n        children: q.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"solve-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: opt,\n            checked: (answers[q.qa_id] || []).includes(opt),\n            onChange: () => handleMultiSelectChange(q.qa_id, opt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 37\n          }, this), opt]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }, this), mode === \"記述問題\" && /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"solve-textarea\",\n        value: answers[q.qa_id] || \"\",\n        onChange: e => handleChange(q.qa_id, e.target.value),\n        placeholder: \"\\u3053\\u3053\\u306B\\u56DE\\u7B54\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }, this)]\n    }, q.qa_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"solve-submit-button\",\n      onClick: handleSubmit,\n      children: \"\\u9001\\u4FE1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(QASolve, \"rVDQ9bNU0GIxcHtSjk95WOBK4Is=\", false, function () {\n  return [useParams];\n});\n_c = QASolve;\nexport default QASolve;\nvar _c;\n$RefreshReg$(_c, \"QASolve\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","QASolve","_s","id","questions","setQuestions","mode","setMode","answers","setAnswers","submitted","setSubmitted","title","setTitle","get","then","res","data","catch","err","console","error","handleChange","qa_id","value","prev","handleMultiSelectChange","current","includes","filter","v","handleSubmit","payload","qa_info_id","post","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","q","index","question","options","opt","i","type","name","checked","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/toshi/Document/AI/engineeringAI/QAservice/frontend_student/src/routes/QASolve.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./QASolve.css\";\n\ninterface QAItem {\n    qa_id: number;\n    question: string;\n    options: string[];\n    answer: string;\n    satisfaction: number;\n}\n\ninterface AnswerState {\n    [qa_id: number]: string | string[]; // 単一または複数選択 or 記述\n}\n\nconst QASolve: React.FC = () => {\n    const { id } = useParams();\n    const [questions, setQuestions] = useState<QAItem[]>([]);\n    const [mode, setMode] = useState<string>(\"\");\n    const [answers, setAnswers] = useState<AnswerState>({});\n    const [submitted, setSubmitted] = useState(false);\n    const [title, setTitle] = useState<string>(\"\"); // ← 追加\n\n    useEffect(() => {\n        // モード取得\n        axios.get(`http://localhost:8000/qainfo/${id}`)\n            .then((res) => {\n                setMode(res.data.mode);\n                setTitle(res.data.title); // ← 追加\n            });\n\n        // 問題取得\n        axios.get(`http://localhost:8000/qaitem/${id}`)\n            .then((res) => {\n                setQuestions(res.data);\n            })\n            .catch((err) => {\n                console.error(\"問題の取得に失敗\", err);\n            });\n    }, [id]);\n\n    const handleChange = (qa_id: number, value: string) => {\n        setAnswers(prev => ({ ...prev, [qa_id]: value }));\n    };\n\n    const handleMultiSelectChange = (qa_id: number, value: string) => {\n        setAnswers(prev => {\n            const current = prev[qa_id] as string[] || [];\n            if (current.includes(value)) {\n                return { ...prev, [qa_id]: current.filter(v => v !== value) };\n            } else {\n                return { ...prev, [qa_id]: [...current, value] };\n            }\n        });\n    };\n\n    const handleSubmit = () => {\n        const payload = {\n            qa_info_id: id,\n            answers: answers\n        };\n\n        axios.post(\"http://localhost:8000/submit\", payload)\n            .then(() => {\n                alert(\"全ての回答が送信されました\");\n                setSubmitted(true);\n            })\n            .catch((err) => {\n                console.error(\"送信に失敗しました\", err);\n            });\n    };\n\n    if (submitted) return <div>回答ありがとうございました。</div>;\n\n    return (\n        <div className=\"solve-container\">\n            <h2 className=\"solve-title\">{title}</h2>\n\n            {questions.map((q, index) => (\n                <div key={q.qa_id} className=\"solve-question-block\">\n                    <p className=\"solve-question\">{index + 1}. {q.question}</p>\n\n                    {(mode === \"４択問題\" || mode === \"３択問題\") && (\n                        <div className=\"solve-options\">\n                            {q.options.map((opt, i) => (\n                                <label key={i} className=\"solve-option\">\n                                    <input\n                                        type=\"radio\"\n                                        name={`option-${q.qa_id}`}\n                                        value={opt}\n                                        checked={answers[q.qa_id] === opt}\n                                        onChange={() => handleChange(q.qa_id, opt)}\n                                    />\n                                    {opt}\n                                </label>\n                            ))}\n                        </div>\n                    )}\n\n                    {mode === \"４択複数問題\" && (\n                        <div className=\"solve-options\">\n                            {q.options.map((opt, i) => (\n                                <label key={i} className=\"solve-option\">\n                                    <input\n                                        type=\"checkbox\"\n                                        value={opt}\n                                        checked={(answers[q.qa_id] as string[] || []).includes(opt)}\n                                        onChange={() => handleMultiSelectChange(q.qa_id, opt)}\n                                    />\n                                    {opt}\n                                </label>\n                            ))}\n                        </div>\n                    )}\n\n                    {mode === \"記述問題\" && (\n                        <textarea\n                            className=\"solve-textarea\"\n                            value={(answers[q.qa_id] as string) || \"\"}\n                            onChange={(e) => handleChange(q.qa_id, e.target.value)}\n                            placeholder=\"ここに回答を入力してください\"\n                        />\n                    )}\n                </div>\n            ))}\n\n            <button className=\"solve-submit-button\" onClick={handleSubmit}>\n                送信\n            </button>\n        </div>\n    );\n};\n\nexport default QASolve;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}