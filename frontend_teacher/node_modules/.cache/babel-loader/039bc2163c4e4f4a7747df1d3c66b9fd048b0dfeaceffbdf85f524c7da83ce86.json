{"ast":null,"code":"var _jsxFileName = \"/Users/toshi/Document/AI/engineeringAI/QAservice/frontend/src/components/FileUploader.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport './FileUploader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploader = () => {\n  _s();\n  const [questionCount, setQuestionCount] = useState(\"5\");\n  const onDrop = useCallback(acceptedFiles => {\n    const pdfFile = acceptedFiles[0];\n    if (pdfFile && pdfFile.type === \"application/pdf\") {\n      const formData = new FormData();\n      formData.append(\"file\", pdfFile);\n      formData.append(\"questionCount\", questionCount);\n      fetch(\"http://localhost:3001/upload\", {\n        method: \"POST\",\n        body: formData\n      }).then(res => res.json()).then(data => console.log(\"成功:\", data)).catch(err => console.error(\"エラー:\", err));\n    } else {\n      alert(\"PDFファイルのみアップロード可能です\");\n    }\n  }, [questionCount]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'application/pdf': []\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploader-container\",\n      ...getRootProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u3053\\u3053\\u306BPDF\\u3092\\u30C9\\u30ED\\u30C3\\u30D7\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u3053\\u3053\\u3092\\u30AF\\u30EA\\u30C3\\u30AF\\u307E\\u305F\\u306F\\u30C9\\u30E9\\u30C3\\u30B0\\u3057\\u3066PDF\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\u751F\\u6210\\u3059\\u308B\\u8CEA\\u554F\\u6570: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: questionCount,\n        onChange: e => setQuestionCount(e.target.value),\n        min: 1,\n        max: 20,\n        style: {\n          width: \"60px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUploader, \"0448QFLs1SNz02SmTaIJ58KEjG4=\", false, function () {\n  return [useDropzone];\n});\n_c = FileUploader;\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useCallback","useState","useDropzone","jsxDEV","_jsxDEV","FileUploader","_s","questionCount","setQuestionCount","onDrop","acceptedFiles","pdfFile","type","formData","FormData","append","fetch","method","body","then","res","json","data","console","log","catch","err","error","alert","getRootProps","getInputProps","isDragActive","accept","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","value","onChange","e","target","min","max","width","_c","$RefreshReg$"],"sources":["/Users/toshi/Document/AI/engineeringAI/QAservice/frontend/src/components/FileUploader.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport './FileUploader.css';\n\nconst FileUploader = () => {\n    const [questionCount, setQuestionCount] = useState(\"5\");\n\n    const onDrop = useCallback((acceptedFiles: File[]) => {\n        const pdfFile = acceptedFiles[0];\n\n        if (pdfFile && pdfFile.type === \"application/pdf\") {\n            const formData = new FormData();\n            formData.append(\"file\", pdfFile);\n            formData.append(\"questionCount\", questionCount);\n\n            fetch(\"http://localhost:3001/upload\", {\n                method: \"POST\",\n                body: formData,\n            })\n                .then(res => res.json())\n                .then(data => console.log(\"成功:\", data))\n                .catch(err => console.error(\"エラー:\", err));\n        } else {\n            alert(\"PDFファイルのみアップロード可能です\");\n        }\n    }, [questionCount]);\n\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop, accept: { 'application/pdf': [] } });\n\n    return (\n        <div>\n            <div className=\"uploader-container\" {...getRootProps()}>\n                <input {...getInputProps()} />\n                {\n                    isDragActive\n                        ? <p>ここにPDFをドロップしてください...</p>\n                        : <p>ここをクリックまたはドラッグしてPDFファイルをアップロード</p>\n                }\n            </div>\n            <div style={{ marginTop: \"1rem\" }}>\n                <label>生成する質問数: </label>\n                <input\n                    type=\"number\"\n                    value={questionCount}\n                    onChange={(e) => setQuestionCount(e.target.value)}\n                    min={1}\n                    max={20}\n                    style={{ width: \"60px\" }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default FileUploader;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}