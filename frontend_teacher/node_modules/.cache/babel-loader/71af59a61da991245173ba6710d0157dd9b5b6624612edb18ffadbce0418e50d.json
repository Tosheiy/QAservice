{"ast":null,"code":"var _jsxFileName = \"/Users/toshi/Document/AI/engineeringAI/QAservice/frontend/src/components/FileUploader.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport './FileUploader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploader = () => {\n  _s();\n  const onDrop = useCallback(acceptedFiles => {\n    const pdfFile = acceptedFiles[0]; // 今は1つだけ扱うと仮定\n\n    if (pdfFile && pdfFile.type === \"application/pdf\") {\n      console.log(\"アップロードされたファイル:\", pdfFile.name);\n\n      // POST送信（FormData使用）\n      const formData = new FormData();\n      formData.append(\"file\", pdfFile); // PDFファイル\n      formData.append(\"questionCount\", \"5\"); // 例：5問生成\n      formData.append(\"mode\", \"summary-and-qa\"); // 例：サマリーとQA生成\n      formData.append(\"userId\", \"abc123\"); // 追加データもOK\n\n      fetch(\"http://localhost:3001/upload\", {\n        method: \"POST\",\n        body: formData\n      }).then(res => {\n        if (!res.ok) throw new Error(\"アップロード失敗\");\n        return res.json();\n      }).then(data => {\n        console.log(\"アップロード成功:\", data);\n      }).catch(err => {\n        console.error(\"エラー:\", err);\n        alert(\"アップロードに失敗しました\");\n      });\n    } else {\n      alert(\"PDFファイルのみアップロード可能です\");\n    }\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'application/pdf': []\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"uploader-container\",\n    ...getRootProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u3053\\u3053\\u306BPDF\\u3092\\u30C9\\u30ED\\u30C3\\u30D7\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u3053\\u3053\\u3092\\u30AF\\u30EA\\u30C3\\u30AF\\u307E\\u305F\\u306F\\u30C9\\u30E9\\u30C3\\u30B0\\u3057\\u3066PDF\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUploader, \"yd//yJtVY5DqPYzQY0xGsdgoRlk=\", false, function () {\n  return [useDropzone];\n});\n_c = FileUploader;\nexport default FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useCallback","useDropzone","jsxDEV","_jsxDEV","FileUploader","_s","onDrop","acceptedFiles","pdfFile","type","console","log","name","formData","FormData","append","fetch","method","body","then","res","ok","Error","json","data","catch","err","error","alert","getRootProps","getInputProps","isDragActive","accept","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/toshi/Document/AI/engineeringAI/QAservice/frontend/src/components/FileUploader.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport './FileUploader.css';\n\nconst FileUploader = () => {\n    const onDrop = useCallback((acceptedFiles: File[]) => {\n        const pdfFile = acceptedFiles[0]; // 今は1つだけ扱うと仮定\n\n        if (pdfFile && pdfFile.type === \"application/pdf\") {\n            console.log(\"アップロードされたファイル:\", pdfFile.name);\n\n            // POST送信（FormData使用）\n            const formData = new FormData();\n            formData.append(\"file\", pdfFile);                 // PDFファイル\n            formData.append(\"questionCount\", \"5\");            // 例：5問生成\n            formData.append(\"mode\", \"summary-and-qa\");        // 例：サマリーとQA生成\n            formData.append(\"userId\", \"abc123\");              // 追加データもOK\n\n            fetch(\"http://localhost:3001/upload\", {\n                method: \"POST\",\n                body: formData,\n            })\n                .then((res) => {\n                    if (!res.ok) throw new Error(\"アップロード失敗\");\n                    return res.json();\n                })\n                .then((data) => {\n                    console.log(\"アップロード成功:\", data);\n                })\n                .catch((err) => {\n                    console.error(\"エラー:\", err);\n                    alert(\"アップロードに失敗しました\");\n                });\n\n        } else {\n            alert(\"PDFファイルのみアップロード可能です\");\n        }\n    }, []);\n\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop, accept: { 'application/pdf': [] } });\n\n    return (\n        <div className=\"uploader-container\" {...getRootProps()}>\n            <input {...getInputProps()} />\n            {\n                isDragActive ?\n                    <p>ここにPDFをドロップしてください...</p> :\n                    <p>ここをクリックまたはドラッグしてPDFファイルをアップロード</p>\n            }\n        </div>\n    );\n};\n\nexport default FileUploader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,MAAM,GAAGN,WAAW,CAAEO,aAAqB,IAAK;IAClD,MAAMC,OAAO,GAAGD,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;;IAElC,IAAIC,OAAO,IAAIA,OAAO,CAACC,IAAI,KAAK,iBAAiB,EAAE;MAC/CC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,OAAO,CAACI,IAAI,CAAC;;MAE3C;MACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEP,OAAO,CAAC,CAAC,CAAiB;MAClDK,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC,CAAY;MAClDF,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC,CAAQ;MAClDF,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAc;;MAElDC,KAAK,CAAC,8BAA8B,EAAE;QAClCC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEL;MACV,CAAC,CAAC,CACGM,IAAI,CAAEC,GAAG,IAAK;QACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,UAAU,CAAC;QACxC,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;MACrB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;QACZd,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEa,IAAI,CAAC;MAClC,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;QACZhB,OAAO,CAACiB,KAAK,CAAC,MAAM,EAAED,GAAG,CAAC;QAC1BE,KAAK,CAAC,eAAe,CAAC;MAC1B,CAAC,CAAC;IAEV,CAAC,MAAM;MACHA,KAAK,CAAC,qBAAqB,CAAC;IAChC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM;IAAEC,YAAY;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAAG9B,WAAW,CAAC;IAAEK,MAAM;IAAE0B,MAAM,EAAE;MAAE,iBAAiB,EAAE;IAAG;EAAE,CAAC,CAAC;EAEhH,oBACI7B,OAAA;IAAK8B,SAAS,EAAC,oBAAoB;IAAA,GAAKJ,YAAY,CAAC,CAAC;IAAAK,QAAA,gBAClD/B,OAAA;MAAA,GAAW2B,aAAa,CAAC;IAAC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAE1BP,YAAY,gBACR5B,OAAA;MAAA+B,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAC3BnC,OAAA;MAAA+B,QAAA,EAAG;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5C,CAAC;AAEd,CAAC;AAACjC,EAAA,CA/CID,YAAY;EAAA,QAmCwCH,WAAW;AAAA;AAAAsC,EAAA,GAnC/DnC,YAAY;AAiDlB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}