{"ast":null,"code":"var _jsxFileName = \"/Users/toshi/Document/AI/engineeringAI/QAservice/frontend/src/components/PdfHighlighter.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport Selecto from \"react-selecto\";\nimport \"react-pdf/dist/esm/Page/AnnotationLayer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\nconst PdfHighlighter = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [, setNumPages] = useState(0);\n  const [rects, setRects] = useState([]); // 選択範囲の矩形を保持\n  const containerRef = useRef(null);\n  const handleFileChange = e => {\n    var _e$target$files;\n    const uploadedFile = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (uploadedFile && uploadedFile.type === \"application/pdf\") {\n      setFile(uploadedFile);\n      setRects([]);\n    }\n  };\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n  };\n  const handleSelect = e => {\n    var _e$inputEvent, _e$inputEvent$target;\n    const newRect = (_e$inputEvent = e.inputEvent) === null || _e$inputEvent === void 0 ? void 0 : (_e$inputEvent$target = _e$inputEvent.target) === null || _e$inputEvent$target === void 0 ? void 0 : _e$inputEvent$target.getBoundingClientRect();\n    if (newRect) {\n      const rectData = {\n        top: newRect.top,\n        left: newRect.left,\n        width: newRect.width,\n        height: newRect.height\n      };\n      setRects(prev => [...prev, rectData]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: \"sans-serif\",\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"PDF \\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\\u3068\\u7BC4\\u56F2\\u9078\\u629E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"application/pdf\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      style: {\n        position: \"relative\",\n        marginTop: 20\n      },\n      children: [file && /*#__PURE__*/_jsxDEV(Document, {\n        file: file,\n        onLoadSuccess: onDocumentLoadSuccess,\n        loading: \"\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D...\",\n        children: /*#__PURE__*/_jsxDEV(Page, {\n          pageNumber: 1,\n          width: 600\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), rects.map((rect, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: rect.top,\n          left: rect.left,\n          width: rect.width,\n          height: rect.height,\n          border: \"2px solid #007bff\",\n          backgroundColor: \"rgba(0,123,255,0.1)\",\n          pointerEvents: \"none\"\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Selecto, {\n        container: containerRef.current,\n        selectableTargets: [\".react-pdf__Page\"],\n        selectByClick: true,\n        selectFromInside: true,\n        onSelect: handleSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(PdfHighlighter, \"/Cy6X2kSEOMEZyuMFI0atWhLkSw=\");\n_c = PdfHighlighter;\nexport default PdfHighlighter;\nvar _c;\n$RefreshReg$(_c, \"PdfHighlighter\");","map":{"version":3,"names":["React","useRef","useState","Document","Page","pdfjs","Selecto","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","PdfHighlighter","_s","file","setFile","setNumPages","rects","setRects","containerRef","handleFileChange","e","_e$target$files","uploadedFile","target","files","type","onDocumentLoadSuccess","numPages","handleSelect","_e$inputEvent","_e$inputEvent$target","newRect","inputEvent","getBoundingClientRect","rectData","top","left","width","height","prev","style","fontFamily","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","ref","position","marginTop","onLoadSuccess","loading","pageNumber","map","rect","idx","border","backgroundColor","pointerEvents","container","current","selectableTargets","selectByClick","selectFromInside","onSelect","_c","$RefreshReg$"],"sources":["/Users/toshi/Document/AI/engineeringAI/QAservice/frontend/src/components/PdfHighlighter.tsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport Selecto from \"react-selecto\";\nimport \"react-pdf/dist/esm/Page/AnnotationLayer.css\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nconst PdfHighlighter: React.FC = () => {\n    const [file, setFile] = useState<File | null>(null);\n    const [, setNumPages] = useState<number>(0);\n    const [rects, setRects] = useState<any[]>([]); // 選択範囲の矩形を保持\n    const containerRef = useRef<HTMLDivElement>(null);\n\n    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const uploadedFile = e.target.files?.[0];\n        if (uploadedFile && uploadedFile.type === \"application/pdf\") {\n            setFile(uploadedFile);\n            setRects([]);\n        }\n    };\n\n    const onDocumentLoadSuccess = ({ numPages }: { numPages: number }) => {\n        setNumPages(numPages);\n    };\n\n    const handleSelect = (e: any) => {\n        const newRect = e.inputEvent?.target?.getBoundingClientRect();\n        if (newRect) {\n            const rectData = {\n                top: newRect.top,\n                left: newRect.left,\n                width: newRect.width,\n                height: newRect.height,\n            };\n            setRects((prev) => [...prev, rectData]);\n        }\n    };\n\n    return (\n        <div style={{ fontFamily: \"sans-serif\", padding: 20 }}>\n            <h2>PDF アップロードと範囲選択</h2>\n            <input type=\"file\" accept=\"application/pdf\" onChange={handleFileChange} />\n\n            <div ref={containerRef} style={{ position: \"relative\", marginTop: 20 }}>\n                {file && (\n                    <Document\n                        file={file}\n                        onLoadSuccess={onDocumentLoadSuccess}\n                        loading=\"読み込み中...\"\n                    >\n                        <Page pageNumber={1} width={600} />\n                    </Document>\n                )}\n\n                {/* 範囲を選択するための透明な矩形 */}\n                {rects.map((rect, idx) => (\n                    <div\n                        key={idx}\n                        style={{\n                            position: \"absolute\",\n                            top: rect.top,\n                            left: rect.left,\n                            width: rect.width,\n                            height: rect.height,\n                            border: \"2px solid #007bff\",\n                            backgroundColor: \"rgba(0,123,255,0.1)\",\n                            pointerEvents: \"none\",\n                        }}\n                    />\n                ))}\n\n                {/* Selectoによる選択検出 */}\n                <Selecto\n                    container={containerRef.current}\n                    selectableTargets={[\".react-pdf__Page\"]}\n                    selectByClick={true}\n                    selectFromInside={true}\n                    onSelect={handleSelect}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default PdfHighlighter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}