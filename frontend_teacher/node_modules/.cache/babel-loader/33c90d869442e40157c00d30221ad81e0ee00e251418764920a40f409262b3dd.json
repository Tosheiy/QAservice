{"ast":null,"code":"var _jsxFileName = \"/Users/toshi/Document/AI/engineeringAI/QAservice/frontend/src/components/UploadPdf.tsx\",\n  _s = $RefreshSig$();\n// src/components/UploadPdf.tsx\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPdf = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleChange = e => {\n    var _e$target$files;\n    const selectedFile = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (selectedFile && selectedFile.type === 'application/pdf') {\n      setFile(selectedFile);\n    } else {\n      alert('PDFファイルを選択してください');\n    }\n  };\n  const handleUpload = () => {\n    if (!file) {\n      alert('ファイルが選択されていません');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('pdf', file);\n    fetch('https://your-api-endpoint/upload', {\n      method: 'POST',\n      body: formData\n    }).then(res => {\n      if (res.ok) {\n        alert('アップロード成功');\n      } else {\n        alert('アップロード失敗');\n      }\n    }).catch(err => {\n      console.error(err);\n      alert('エラーが発生しました');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"PDF\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"application/pdf\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadPdf, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = UploadPdf;\nexport default UploadPdf;\nvar _c;\n$RefreshReg$(_c, \"UploadPdf\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadPdf","_s","file","setFile","handleChange","e","_e$target$files","selectedFile","target","files","type","alert","handleUpload","formData","FormData","append","fetch","method","body","then","res","ok","catch","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/toshi/Document/AI/engineeringAI/QAservice/frontend/src/components/UploadPdf.tsx"],"sourcesContent":["// src/components/UploadPdf.tsx\nimport React, { useState } from 'react';\n\nconst UploadPdf: React.FC = () => {\n    const [file, setFile] = useState<File | null>(null);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const selectedFile = e.target.files?.[0];\n        if (selectedFile && selectedFile.type === 'application/pdf') {\n            setFile(selectedFile);\n        } else {\n            alert('PDFファイルを選択してください');\n        }\n    };\n\n    const handleUpload = () => {\n        if (!file) {\n            alert('ファイルが選択されていません');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('pdf', file);\n\n        fetch('https://your-api-endpoint/upload', {\n            method: 'POST',\n            body: formData,\n        })\n            .then((res) => {\n                if (res.ok) {\n                    alert('アップロード成功');\n                } else {\n                    alert('アップロード失敗');\n                }\n            })\n            .catch((err) => {\n                console.error(err);\n                alert('エラーが発生しました');\n            });\n    };\n\n    return (\n        <div>\n            <h2>PDFアップロード</h2>\n            <input type=\"file\" accept=\"application/pdf\" onChange={handleChange} />\n            <button onClick={handleUpload}>アップロード</button>\n        </div>\n    );\n};\n\nexport default UploadPdf;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAc,IAAI,CAAC;EAEnD,MAAMO,YAAY,GAAIC,CAAsC,IAAK;IAAA,IAAAC,eAAA;IAC7D,MAAMC,YAAY,IAAAD,eAAA,GAAGD,CAAC,CAACG,MAAM,CAACC,KAAK,cAAAH,eAAA,uBAAdA,eAAA,CAAiB,CAAC,CAAC;IACxC,IAAIC,YAAY,IAAIA,YAAY,CAACG,IAAI,KAAK,iBAAiB,EAAE;MACzDP,OAAO,CAACI,YAAY,CAAC;IACzB,CAAC,MAAM;MACHI,KAAK,CAAC,kBAAkB,CAAC;IAC7B;EACJ,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACV,IAAI,EAAE;MACPS,KAAK,CAAC,gBAAgB,CAAC;MACvB;IACJ;IAEA,MAAME,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,KAAK,EAAEb,IAAI,CAAC;IAE5Bc,KAAK,CAAC,kCAAkC,EAAE;MACtCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEL;IACV,CAAC,CAAC,CACGM,IAAI,CAAEC,GAAG,IAAK;MACX,IAAIA,GAAG,CAACC,EAAE,EAAE;QACRV,KAAK,CAAC,UAAU,CAAC;MACrB,CAAC,MAAM;QACHA,KAAK,CAAC,UAAU,CAAC;MACrB;IACJ,CAAC,CAAC,CACDW,KAAK,CAAEC,GAAG,IAAK;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBZ,KAAK,CAAC,YAAY,CAAC;IACvB,CAAC,CAAC;EACV,CAAC;EAED,oBACIZ,OAAA;IAAA2B,QAAA,gBACI3B,OAAA;MAAA2B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB/B,OAAA;MAAOW,IAAI,EAAC,MAAM;MAACqB,MAAM,EAAC,iBAAiB;MAACC,QAAQ,EAAE5B;IAAa;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtE/B,OAAA;MAAQkC,OAAO,EAAErB,YAAa;MAAAc,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEd,CAAC;AAAC7B,EAAA,CA7CID,SAAmB;AAAAkC,EAAA,GAAnBlC,SAAmB;AA+CzB,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}