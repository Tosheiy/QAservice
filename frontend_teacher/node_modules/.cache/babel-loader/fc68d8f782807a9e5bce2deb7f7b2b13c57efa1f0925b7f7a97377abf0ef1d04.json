{"ast":null,"code":"var _jsxFileName = \"/Users/toshi/Document/AI/engineeringAI/QAservice/frontend/src/routes/QADetail.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport './QADisplay.css';\n\n// mockQAData のキーを string に変える\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockQAData = {\n  \"101\": [{\n    id: 1,\n    qa_id: 101,\n    question: \"What is the capital of Japan?\",\n    options: [\"Tokyo\", \"Osaka\", \"Kyoto\"],\n    answer: \"Tokyo\",\n    mode: \"multiple-choice\",\n    created_at: \"2022-12-25\"\n  }],\n  \"102\": [{\n    id: 1,\n    qa_id: 102,\n    question: \"What is gravity?\",\n    options: [],\n    answer: \"A force that attracts two bodies\",\n    mode: \"記述式問題\",\n    created_at: \"2023-01-01\"\n  }]\n};\nconst QADetail = () => {\n  _s();\n  const {\n    qa_id\n  } = useParams();\n  const qaList = mockQAData[qa_id];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qa-result-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"qa-title\",\n      children: [\"QA\\u30B0\\u30EB\\u30FC\\u30D7: \", qa_id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), qaList ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"qa-list\",\n      children: qaList.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"qa-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"qa-question\",\n          children: [\"Q\", index + 1, \": \", item.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), item.options && item.options.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"qa-options\",\n          children: item.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"\\u30FB\", opt]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"qa-answer\",\n          children: [\"Answer: \", item.answer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"qa-date\",\n          children: [\"\\u4F5C\\u6210\\u65E5: \", item.created_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u30C7\\u30FC\\u30BF\\u304C\\u898B\\u3064\\u304B\\u308A\\u307E\\u305B\\u3093\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(QADetail, \"heHXshF2s0ld/ivZRUmebvE4BHE=\", false, function () {\n  return [useParams];\n});\n_c = QADetail;\nexport default QADetail;\nvar _c;\n$RefreshReg$(_c, \"QADetail\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","mockQAData","id","qa_id","question","options","answer","mode","created_at","QADetail","_s","qaList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","length","opt","i","_c","$RefreshReg$"],"sources":["/Users/toshi/Document/AI/engineeringAI/QAservice/frontend/src/routes/QADetail.tsx"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport './QADisplay.css';\n\n// mockQAData のキーを string に変える\nconst mockQAData: Record<string, any[]> = {\n    \"101\": [\n        {\n            id: 1,\n            qa_id: 101,\n            question: \"What is the capital of Japan?\",\n            options: [\"Tokyo\", \"Osaka\", \"Kyoto\"],\n            answer: \"Tokyo\",\n            mode: \"multiple-choice\",\n            created_at: \"2022-12-25\"\n        }\n    ],\n    \"102\": [\n        {\n            id: 1,\n            qa_id: 102,\n            question: \"What is gravity?\",\n            options: [],\n            answer: \"A force that attracts two bodies\",\n            mode: \"記述式問題\",\n            created_at: \"2023-01-01\"\n        }\n    ]\n  };\n\nconst QADetail: React.FC = () => {\n    const { qa_id } = useParams();\n    const qaList = mockQAData[qa_id as keyof typeof mockQAData];\n\n    return (\n        <div className=\"qa-result-container\">\n            <h1 className=\"qa-title\">QAグループ: {qa_id}</h1>\n            {qaList ? (\n                <ul className=\"qa-list\">\n                    {qaList.map((item, index) => (\n                        <li key={index} className=\"qa-item\">\n                            <p className=\"qa-question\">Q{index + 1}: {item.question}</p>\n                            {item.options && item.options.length > 0 && (\n                                <ul className=\"qa-options\">\n                                    {item.options.map((opt, i) => (\n                                        <li key={i}>・{opt}</li>\n                                    ))}\n                                </ul>\n                            )}\n                            <p className=\"qa-answer\">Answer: {item.answer}</p>\n                            <p className=\"qa-date\">作成日: {item.created_at}</p>\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <p>データが見つかりません。</p>\n            )}\n        </div>\n    );\n};\n\nexport default QADetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}